{% schema %}
{
  "name": "Custom FAQs",
  "settings": [
    {
      "type": "text",
      "id": "section_title",
      "label": "Section Title"
    },
    {
      "type": "image_picker",
      "id": "image_heading",
      "label": "Heading Image"
    },
     {
      "type": "text",
      "id": "discription",
      "label": "Discription"
    }
  ],
  "blocks": [
    {
      "type": "multi_block",
      "name": "Multi-block",
      "settings": [


        {
          "type": "text",
          "id": "faq_question",
          "label": "Question",
          "default": "How Is Nerve Matrixâ„¢ Different?"
        },
        {
          "type": "richtext",
          "id": "faq_answer",
          "label": "Text Content",
        },

      ]
    }
  ],
  "presets": [
    {
      "name": "Custom FAQs"
    }
  ]
}
{% endschema %}

{% render 'custum-heading',
  heading: section.settings.section_title,
  discription: section.settings.discription,
  image: section.settings.image_heading
%}

<div class="faq-container">
  {% for block in section.blocks %}
    <div class="faq-item">
      <div class="faq-question-div">
        <h3 class="faq-question">
          {{ block.settings.faq_question }}
        </h3>
        <svg xmlns="http://www.w3.org/2000/svg" width="15" height="10" viewBox="0 0 15 10" fill="none">
          <path d="M14 1.604L7.5 8.604L1 1.604" stroke="black" stroke-opacity="0.3" stroke-width="1.90482" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </div>
      <div class="faq-answer">
        <p>{{ block.settings.faq_answer }}</p>
      </div>
    </div>
  {% endfor %}
</div>

<style>
  .faq-container {
      width: 100%;
      max-width: 1200px;
      margin: 0px auto;
      display: flex;
      padding: 0px 20px 120px;
      align-items: flex-start;
    justify-content: center;
      gap: 40px;
    flex-wrap: wrap;
  }

  .faq-item {
      max-width:500px;
      width:50%;
      margin-bottom: 10px;
      border-radius: 4px;
      border: 1px solid rgba(0, 0, 0, 0.30);
      overflow: hidden;
      background-color: #fff;
  }
  .faq-question-div{
    display: flex;

    padding: 24px;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
  }
  .faq-question {
      width: 100%;
      text-align: left;

      transition: background-color 0.3s;
      color: #000;
      font-family: "Tenor Sans";
      font-size: 18px;
      font-style: normal;
      font-weight: 400;
      line-height: normal;
  }


  .faq-answer {
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.5s ease;
      padding: 0 24px;
      background-color: #fff;
  }

  .faq-answer p {
      margin: 0;
      padding: 6px 0 24px;
      color: rgba(0, 0, 0, 0.75);
      font-family: "Nunito Sans";
      font-size: 16px;
      font-style: normal;
      font-weight: 400;
      line-height: 140%; /* 22.4px */
      opacity: 0.7;
  }
   @media screen and (max-width: 768px) {
      .faq-item {
      max-width:100%;
      width:100%;
      margin-bottom: 10px;
      border-radius: 4px;
      border: 1px solid rgba(0, 0, 0, 0.30);
      overflow: hidden;
      background-color: #fff;
  }
      .faq-container {

      gap: 16px;

  }
       .faq-question-div{
    display: flex;

   padding: 10px 24px;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
  }
  .faq-question {
     font-size: 16px;
  }


  .faq-answer {
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.5s ease;
      padding: 0 24px;
      background-color: #fff;
  }

  .faq-answer p {
      padding: 6px 0 24px;
      font-size: 14px;

  }
     .faq-container{
       padding: 0px 20px 60px;
     }
   }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
      const faqItems = document.querySelectorAll(".faq-item");

      faqItems.forEach(item => {
          const questionButton = item.querySelector(".faq-question-div");

          questionButton.addEventListener("click", () => {
              const answer = item.querySelector(".faq-answer");
              const currentMaxHeight = answer.style.maxHeight;

              // Close all other answers
              faqItems.forEach(i => {
                  if (i !== item) {
                      i.querySelector(".faq-answer").style.maxHeight = null;
                  }
              });

              // Toggle the current answer
              if (currentMaxHeight) {
                  answer.style.maxHeight = null;
              } else {
                  answer.style.maxHeight = answer.scrollHeight + "px";
              }
          });
      });
  });
</script>
